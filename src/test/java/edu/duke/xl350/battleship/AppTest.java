/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.xl350.battleship;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.parallel.ResourceAccessMode;
import org.junit.jupiter.api.parallel.ResourceLock;
import org.junit.jupiter.api.parallel.Resources;

class AppTest {
    
    //@Disabled
    @Test
    @ResourceLock(value = Resources.SYSTEM_OUT, mode = ResourceAccessMode.READ_WRITE)
    void test_main() throws IOException{
        String[] inputs = new String[6], outputs = new String[6];
        inputs[0] = "input.txt";
        inputs[1] = "input2.txt";
        inputs[2] = "input3.txt";
        inputs[3] = "input4.txt";
        inputs[4] = "input5.txt";
        inputs[5] = "input6.txt";
        outputs[0] = "output.txt";
        outputs[1] = "output2.txt";
        outputs[2] = "output3.txt";
        outputs[3] = "output4.txt";
        outputs[4] = "output5.txt";
        outputs[5] = "output6.txt";
        for(int i=5;i<6;i++){
            ByteArrayOutputStream bytes = new ByteArrayOutputStream();
            PrintStream out = new PrintStream(bytes, true);

            InputStream input = getClass().getClassLoader().getResourceAsStream(inputs[i]);
            assertNotNull(input);

            InputStream expectedStream = getClass().getClassLoader().getResourceAsStream(outputs[i]);
            assertNotNull(expectedStream);

            InputStream oldIn = System.in;
            PrintStream oldOut = System.out;

            try {
                System.setIn(input);
                System.setOut(out);
                App.main(new String[0]);
            }
            finally {
                System.setIn(oldIn);
                System.setOut(oldOut);
            }
            String expected = new String(expectedStream.readAllBytes());
            String actual = bytes.toString();
            assertEquals(expected, actual);
        }
    }

}
